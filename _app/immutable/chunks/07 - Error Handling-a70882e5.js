import{S as ze,i as Ae,s as Ge,k as s,q as p,a as c,l as r,m as a,r as f,h as t,c as n,b as i,E as o,B as ye}from"./index-a01aa152.js";function Je(Me){let h,$,I,m,g,j,x,ee,W,v,S,te,le,T,ie,q,_,oe,Y,E,se,B,w,re,M,u,U,ae,pe,R,fe,ce,F,ne,z,d,ue,A,y,he,G,C,ve,J,b,me,K,D,xe,O,H,_e,Q,P,Ee,V,L,we,X,k,de;return{c(){h=s("h1"),$=p("Use Exceptions Rather Than Return Codes"),I=c(),m=s("p"),g=p("Don’t force caller to do validation"),j=c(),x=s("h1"),ee=p("Write Your Try-Catch-Finally Statement First"),W=c(),v=s("ul"),S=s("li"),te=p("Limit the scope of your try statement to that which throws exceptions"),le=c(),T=s("li"),ie=p("Write tests which force exceptions"),q=c(),_=s("h1"),oe=p("Use Unchecked Exceptions"),Y=c(),E=s("p"),se=p("checked exception: documenting in your code what exceptions can be thrown - violates open/close, creates too much clutter"),B=c(),w=s("h1"),re=p("Provide Context with Exceptions"),M=c(),u=s("ul"),U=s("li"),ae=p("what is the cause of the exception?"),pe=c(),R=s("li"),fe=p("where did the exception occur?"),ce=c(),F=s("li"),ne=p("clarify how intent was violated"),z=c(),d=s("h1"),ue=p("Define Exception Classes in Terms of a Caller’s Needs"),A=c(),y=s("h2"),he=p("wrap third party code to reduce dependency"),G=c(),C=s("p"),ve=p("if an api is providing more functionality/exceptions than you need, wrap it"),J=c(),b=s("h1"),me=p("Define the Normal Flow"),K=c(),D=s("p"),xe=p("Don’t execute normal code in catch statements; avoid/surpress exceptions by having the invoked method return a valid Special Case object providing the expected result"),O=c(),H=s("h1"),_e=p("Don’t Return Null"),Q=c(),P=s("p"),Ee=p("Throw an exception or return a Special Case object if possible"),V=c(),L=s("h1"),we=p("Don’t Pass Null"),X=c(),k=s("p"),de=p("assertions / argument validation passes on the problem; nulls proliferate")},l(e){h=r(e,"H1",{});var l=a(h);$=f(l,"Use Exceptions Rather Than Return Codes"),l.forEach(t),I=n(e),m=r(e,"P",{});var Ce=a(m);g=f(Ce,"Don’t force caller to do validation"),Ce.forEach(t),j=n(e),x=r(e,"H1",{});var be=a(x);ee=f(be,"Write Your Try-Catch-Finally Statement First"),be.forEach(t),W=n(e),v=r(e,"UL",{});var Z=a(v);S=r(Z,"LI",{});var De=a(S);te=f(De,"Limit the scope of your try statement to that which throws exceptions"),De.forEach(t),le=n(Z),T=r(Z,"LI",{});var He=a(T);ie=f(He,"Write tests which force exceptions"),He.forEach(t),Z.forEach(t),q=n(e),_=r(e,"H1",{});var Pe=a(_);oe=f(Pe,"Use Unchecked Exceptions"),Pe.forEach(t),Y=n(e),E=r(e,"P",{});var Le=a(E);se=f(Le,"checked exception: documenting in your code what exceptions can be thrown - violates open/close, creates too much clutter"),Le.forEach(t),B=n(e),w=r(e,"H1",{});var ke=a(w);re=f(ke,"Provide Context with Exceptions"),ke.forEach(t),M=n(e),u=r(e,"UL",{});var N=a(u);U=r(N,"LI",{});var Ne=a(U);ae=f(Ne,"what is the cause of the exception?"),Ne.forEach(t),pe=n(N),R=r(N,"LI",{});var Se=a(R);fe=f(Se,"where did the exception occur?"),Se.forEach(t),ce=n(N),F=r(N,"LI",{});var Te=a(F);ne=f(Te,"clarify how intent was violated"),Te.forEach(t),N.forEach(t),z=n(e),d=r(e,"H1",{});var Ue=a(d);ue=f(Ue,"Define Exception Classes in Terms of a Caller’s Needs"),Ue.forEach(t),A=n(e),y=r(e,"H2",{});var Re=a(y);he=f(Re,"wrap third party code to reduce dependency"),Re.forEach(t),G=n(e),C=r(e,"P",{});var Fe=a(C);ve=f(Fe,"if an api is providing more functionality/exceptions than you need, wrap it"),Fe.forEach(t),J=n(e),b=r(e,"H1",{});var Ie=a(b);me=f(Ie,"Define the Normal Flow"),Ie.forEach(t),K=n(e),D=r(e,"P",{});var je=a(D);xe=f(je,"Don’t execute normal code in catch statements; avoid/surpress exceptions by having the invoked method return a valid Special Case object providing the expected result"),je.forEach(t),O=n(e),H=r(e,"H1",{});var We=a(H);_e=f(We,"Don’t Return Null"),We.forEach(t),Q=n(e),P=r(e,"P",{});var qe=a(P);Ee=f(qe,"Throw an exception or return a Special Case object if possible"),qe.forEach(t),V=n(e),L=r(e,"H1",{});var Ye=a(L);we=f(Ye,"Don’t Pass Null"),Ye.forEach(t),X=n(e),k=r(e,"P",{});var Be=a(k);de=f(Be,"assertions / argument validation passes on the problem; nulls proliferate"),Be.forEach(t)},m(e,l){i(e,h,l),o(h,$),i(e,I,l),i(e,m,l),o(m,g),i(e,j,l),i(e,x,l),o(x,ee),i(e,W,l),i(e,v,l),o(v,S),o(S,te),o(v,le),o(v,T),o(T,ie),i(e,q,l),i(e,_,l),o(_,oe),i(e,Y,l),i(e,E,l),o(E,se),i(e,B,l),i(e,w,l),o(w,re),i(e,M,l),i(e,u,l),o(u,U),o(U,ae),o(u,pe),o(u,R),o(R,fe),o(u,ce),o(u,F),o(F,ne),i(e,z,l),i(e,d,l),o(d,ue),i(e,A,l),i(e,y,l),o(y,he),i(e,G,l),i(e,C,l),o(C,ve),i(e,J,l),i(e,b,l),o(b,me),i(e,K,l),i(e,D,l),o(D,xe),i(e,O,l),i(e,H,l),o(H,_e),i(e,Q,l),i(e,P,l),o(P,Ee),i(e,V,l),i(e,L,l),o(L,we),i(e,X,l),i(e,k,l),o(k,de)},p:ye,i:ye,o:ye,d(e){e&&t(h),e&&t(I),e&&t(m),e&&t(j),e&&t(x),e&&t(W),e&&t(v),e&&t(q),e&&t(_),e&&t(Y),e&&t(E),e&&t(B),e&&t(w),e&&t(M),e&&t(u),e&&t(z),e&&t(d),e&&t(A),e&&t(y),e&&t(G),e&&t(C),e&&t(J),e&&t(b),e&&t(K),e&&t(D),e&&t(O),e&&t(H),e&&t(Q),e&&t(P),e&&t(V),e&&t(L),e&&t(X),e&&t(k)}}}const Oe={created_at:"2022-11-27 21:37:13 -0500",updated_at:"2022-11-30 09:46:33 -0500",tags:["programming:architecture","author:Robert C. Martin","book:Clean Code"]};class Qe extends ze{constructor(h){super(),Ae(this,h,null,Je,Ge,{})}}export{Qe as default,Oe as metadata};
